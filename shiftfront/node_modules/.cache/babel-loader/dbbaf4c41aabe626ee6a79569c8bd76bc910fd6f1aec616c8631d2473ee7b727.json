{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Составить формулу\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Выберите профессию\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\",\n  disabled: \"\",\n  selected: \"\"\n}, \"Выберите профессию\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Выберите тип зказа для профессии\", -1 /* HOISTED */);\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  key: 0\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, \" X = количество заказов с данным типом, Y = количество минут, затраченное на заказ \", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Введите формулу\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"select\", {\n    name: \"combo_profession\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedProf = $event)\n  }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listProf, profes => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: profes.profession_id,\n      value: profes.profession_id\n    }, _toDisplayString(profes.profession_name), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedProf]]), _hoisted_5, _withDirectives(_createElementVNode(\"select\", {\n    name: \"combo_order\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedType = $event),\n    placeholder: \"X = количество заказов с данным типом\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listTypeOrder, order_type => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: order_type.order_type_id,\n      value: order_type.order_type_id\n    }, _toDisplayString(order_type.order_type_name), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedType]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.CountDay = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.CountDay]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.learnAverrageTime && $options.learnAverrageTime(...args))\n  }, \"Среднее время на заказ\")]), $data.averageTime ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, \"Среднее время на заказ: \" + _toDisplayString($data.averageTime.average_time), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Количество заказов: \" + _toDisplayString($data.averageTime.order_count), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", null, [_hoisted_8, _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.formulValue = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formulValue]])]), _createElementVNode(\"p\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.insertFormul && $options.insertFormul(...args))\n  }, \"Создать формулу\")]), $data.errors ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.errors, (error, key) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: key\n    }, _toDisplayString(error), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","value","disabled","selected","key","_createElementBlock","_hoisted_1","_hoisted_2","name","_cache","$event","$data","selectedProf","_hoisted_3","_Fragment","_renderList","listProf","profes","profession_id","profession_name","_hoisted_4","_hoisted_5","selectedType","placeholder","listTypeOrder","order_type","order_type_id","order_type_name","_hoisted_6","type","CountDay","onClick","args","$options","learnAverrageTime","averageTime","_hoisted_7","_toDisplayString","average_time","order_count","_createCommentVNode","_hoisted_8","_hoisted_9","formulValue","insertFormul","errors","_hoisted_10","error"],"sources":["V:\\web\\shiftfront\\src\\components\\Formuls.vue"],"sourcesContent":["<!--Formuls-->\r\n<template>\r\n  <div>\r\n    <h1>Составить формулу</h1>\r\n    <div>\r\n      <p>Выберите профессию</p>\r\n      <select name=\"combo_profession\" v-model=\"selectedProf\">\r\n        <option value=\"\" disabled selected>Выберите профессию</option>\r\n        <option\r\n          v-for=\"profes in listProf\"\r\n          :key=\"profes.profession_id\"\r\n          :value=\"profes.profession_id\"\r\n        >\r\n          {{ profes.profession_name }}\r\n        </option>\r\n      </select>\r\n      <p>Выберите тип зказа для профессии</p>\r\n      <select\r\n        name=\"combo_order\"\r\n        v-model=\"selectedType\"\r\n        placeholder=\"X = количество заказов с данным типом\"\r\n      >\r\n        <option\r\n          v-for=\"order_type in listTypeOrder\"\r\n          :key=\"order_type.order_type_id\"\r\n          :value=\"order_type.order_type_id\"\r\n        >\r\n          {{ order_type.order_type_name }}\r\n        </option>\r\n      </select>\r\n      <input type=\"number\" v-model=\"CountDay\" />\r\n      <button @click=\"learnAverrageTime\">Среднее время на заказ</button>\r\n    </div>\r\n    <div v-if=\"averageTime\">\r\n      <p>Среднее время на заказ: {{ averageTime.average_time }}</p>\r\n      <p>Количество заказов: {{ averageTime.order_count }}</p>\r\n    </div>\r\n    <div>\r\n      <p>\r\n        X = количество заказов с данным типом, Y = количество минут, затраченное\r\n        на заказ\r\n      </p>\r\n      <p>Введите формулу</p>\r\n      <input type=\"text\" v-model=\"formulValue\" />\r\n    </div>\r\n    <p><button @click=\"insertFormul\">Создать формулу</button></p>\r\n    <div v-if=\"errors\">\r\n      <ul>\r\n        <li v-for=\"(error, key) in errors\" :key=\"key\">{{ error }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport orderStatistic from \"@/services/data_import\";\r\nexport default {\r\n  name: \"TheFormuls\",\r\n  data() {\r\n    return {\r\n      listTypeOrder: null,\r\n      listProf: null,\r\n      selectedProf: null,\r\n      selectedType: null,\r\n      formulValue: \"\",\r\n      errors: null,\r\n      averageTime: null,\r\n      CountDay: 0,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getOrderTypes();\r\n    this.getProfessions();\r\n  },\r\n  methods: {\r\n    getOrderTypes() {\r\n      orderStatistic\r\n        .getOrderType()\r\n        .then((response) => {\r\n          this.listTypeOrder = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    getProfessions() {\r\n      orderStatistic\r\n        .getProfession()\r\n        .then((response) => {\r\n          this.listProf = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    insertFormul() {\r\n      if (!this.selectedProf || !this.formulValue) {\r\n        alert(\"Please select a profession and enter a formula.\");\r\n        return;\r\n      }\r\n      orderStatistic\r\n        .getIdProfession(this.selectedProf)\r\n        .then((response) => {\r\n          let id_prof = response.data;\r\n          id_prof + 1;\r\n          orderStatistic\r\n            .insertFormule(this.selectedProf, this.formulValue)\r\n            .then((response) => {\r\n              console.log(\"Formula created successfully:\", response);\r\n              this.errors = null;\r\n            })\r\n            .catch((error) => {\r\n              if (error.response) {\r\n                this.errors = error.response.data.errors;\r\n                console.error(\"Validation Error:\", error.response.data.errors);\r\n              } else {\r\n                console.error(\"Error:\", error);\r\n              }\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error getting profession ID:\", error);\r\n        });\r\n    },\r\n    learnAverrageTime() {\r\n      orderStatistic\r\n        .getAverTime(this.selectedType, this.CountDay)\r\n        .then((response) => {\r\n          this.averageTime = response.data;\r\n          console.log(\"Formula created successfully:\", response);\r\n          this.errors = null;\r\n        })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            this.errors = error.response.data.errors;\r\n            console.error(\"Validation Error:\", error.response.data.errors);\r\n          } else {\r\n            console.error(\"Error:\", error);\r\n          }\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}