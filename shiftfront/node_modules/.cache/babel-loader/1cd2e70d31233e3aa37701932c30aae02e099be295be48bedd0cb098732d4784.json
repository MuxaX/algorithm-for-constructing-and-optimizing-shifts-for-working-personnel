{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6121525c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Все заказы\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"all-users-section\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"chart\",\n  style: {\n    height: '300px',\n    width: '50%'\n  }\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"button-section\"\n};\nconst _hoisted_6 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.order_count_list, (order_unit, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createCommentVNode(\" Display order details here \"), _createElementVNode(\"p\", null, \" Order Hour: \" + _toDisplayString(order_unit.order_hour) + \" | Order Count: \" + _toDisplayString(order_unit.order_count), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"select\", {\n    name: \"combo_order\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedType = $event),\n    class: \"select-input\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listTypeOrder, order_type => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: order_type.order_type_id,\n      value: order_type.order_type_id\n    }, _toDisplayString(order_type.order_type_name), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedType]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedDate = $event),\n    class: \"date-input\",\n    placeholder: \"Select Date\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedDate]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.orderStatlist && $options.orderStatlist(...args)),\n    class: \"green-button\"\n  }, \" Fetch Order Stat \"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$router.push({\n      name: 'viewformuls'\n    })),\n    class: \"green-button\"\n  }, \" Просмотр формул \"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.$router.push({\n      name: 'shiftlist'\n    })),\n    class: \"green-button\"\n  }, \" Просмотр смен \")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","style","height","width","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","order_count_list","order_unit","index","key","_createCommentVNode","_toDisplayString","order_hour","order_count","_hoisted_4","_hoisted_5","name","_cache","$event","selectedType","listTypeOrder","order_type","order_type_id","value","order_type_name","_hoisted_6","type","selectedDate","placeholder","onClick","args","$options","orderStatlist","_ctx","$router","push"],"sources":["V:\\web\\shiftfront\\src\\components\\OrderStatistic.vue"],"sourcesContent":["<!--OrderStatistic-->\r\n<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">Все заказы</h1>\r\n    <div class=\"all-users-section\">\r\n      <div v-for=\"(order_unit, index) in order_count_list\" :key=\"index\">\r\n        <!-- Display order details here -->\r\n        <p>\r\n          Order Hour: {{ order_unit.order_hour }} | Order Count:\r\n          {{ order_unit.order_count }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div id=\"chart\" :style=\"{ height: '300px', width: '50%' }\"></div>\r\n    <div class=\"button-section\">\r\n      <select name=\"combo_order\" v-model=\"selectedType\" class=\"select-input\">\r\n        <option\r\n          v-for=\"order_type in listTypeOrder\"\r\n          :key=\"order_type.order_type_id\"\r\n          :value=\"order_type.order_type_id\"\r\n        >\r\n          {{ order_type.order_type_name }}\r\n        </option>\r\n      </select>\r\n      <input\r\n        type=\"date\"\r\n        v-model=\"selectedDate\"\r\n        class=\"date-input\"\r\n        placeholder=\"Select Date\"\r\n      />\r\n      <button @click=\"orderStatlist\" class=\"green-button\">\r\n        Fetch Order Stat\r\n      </button>\r\n      <button\r\n        @click=\"$router.push({ name: 'viewformuls' })\"\r\n        class=\"green-button\"\r\n      >\r\n        Просмотр формул\r\n      </button>\r\n      <button @click=\"$router.push({ name: 'shiftlist' })\" class=\"green-button\">\r\n        Просмотр смен\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport orderStatistic from \"@/services/data_import.js\";\r\nimport ApexCharts from \"apexcharts\";\r\n\r\nexport default {\r\n  name: \"TheOrderStatistic\",\r\n  props: {\r\n    msg: String,\r\n  },\r\n  data() {\r\n    return {\r\n      order_count_list: [],\r\n      chart: null,\r\n      selectedDate: \"\", // Initial date value\r\n      listTypeOrder: null,\r\n      selectedType: null,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    orderStatlist() {\r\n      if (!this.selectedDate) {\r\n        console.error(\"Please select a date\");\r\n        return;\r\n      }\r\n\r\n      if (!this.selectedType) {\r\n        this.selectedType = 0;\r\n      }\r\n\r\n      orderStatistic\r\n        .getOrderStat(this.selectedDate, this.selectedType)\r\n        .then((response) => {\r\n          if (response.data && response.data.length > 0) {\r\n            this.order_count_list = response.data;\r\n            this.renderChart();\r\n            console.log(response.data);\r\n          } else {\r\n            console.log(\"No data received for the selected date.\");\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    renderChart() {\r\n      if (this.chart) {\r\n        this.chart.destroy();\r\n      }\r\n\r\n      if (this.order_count_list.length === 0) {\r\n        console.log(\"No data to render chart.\");\r\n        return;\r\n      }\r\n\r\n      const options = {\r\n        chart: {\r\n          type: \"bar\",\r\n          id: \"vuechart-example\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"sales\",\r\n            data: this.order_count_list.map((item) => item.order_count),\r\n          },\r\n        ],\r\n        xaxis: {\r\n          categories: this.order_count_list.map((item) => item.order_hour),\r\n        },\r\n      };\r\n\r\n      this.chart = new ApexCharts(document.querySelector(\"#chart\"), options);\r\n      this.chart.render();\r\n    },\r\n    getOrderTypes() {\r\n      orderStatistic\r\n        .getOrderType()\r\n        .then((response) => {\r\n          this.listTypeOrder = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getOrderTypes();\r\n    // Optionally set a default date and fetch data\r\n    // this.selectedDate = '2024-07-29';\r\n    // this.orderStatlist();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 800px;\r\n  margin: 40px auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.all-users-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.select-input,\r\n.date-input {\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.button-section {\r\n  margin-top: 20px;\r\n}\r\n\r\n.green-button {\r\n  background-color: #34c759;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin: 10px 0;\r\n}\r\n\r\n.green-button:hover {\r\n  background-color: #2ecc71;\r\n}\r\n</style>\r\n"],"mappings":";;;;EAEOA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAAiC;EAA7BD,KAAK,EAAC;AAAO,GAAC,YAAU;;EACvBA,KAAK,EAAC;AAAmB;gEAS9BC,mBAAA,CAAiE;EAA5DC,EAAE,EAAC,OAAO;EAAEC,KAAK,EAAE;IAAAC,MAAA;IAAAC,KAAA;EAAA;;;EACnBL,KAAK,EAAC;AAAgB;mBAd/B;;uBAEEM,mBAAA,CAyCM,OAzCNC,UAyCM,GAxCJC,UAAiC,EACjCP,mBAAA,CAQM,OARNQ,UAQM,I,kBAPJH,mBAAA,CAMMI,SAAA,QAXZC,WAAA,CAKyCC,KAAA,CAAAC,gBAAgB,EALzD,CAKmBC,UAAU,EAAEC,KAAK;yBAA9BT,mBAAA,CAMM;MANgDU,GAAG,EAAED;IAAK,IAC9DE,mBAAA,gCAAmC,EACnChB,mBAAA,CAGI,WAHD,eACW,GAAAiB,gBAAA,CAAGJ,UAAU,CAACK,UAAU,IAAG,kBACvC,GAAAD,gBAAA,CAAGJ,UAAU,CAACM,WAAW,iB;oCAI/BC,UAAiE,EACjEpB,mBAAA,CA4BM,OA5BNqB,UA4BM,G,gBA3BJrB,mBAAA,CAQS;IARDsB,IAAI,EAAC,aAAa;IAfhC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe0Cb,KAAA,CAAAc,YAAY,GAAAD,MAAA;IAAEzB,KAAK,EAAC;yBACtDM,mBAAA,CAMSI,SAAA,QAtBjBC,WAAA,CAiB+BC,KAAA,CAAAe,aAAa,EAA3BC,UAAU;yBADnBtB,mBAAA,CAMS;MAJNU,GAAG,EAAEY,UAAU,CAACC,aAAa;MAC7BC,KAAK,EAAEF,UAAU,CAACC;wBAEhBD,UAAU,CAACG,eAAe,wBArBvCC,UAAA;2EAe0CpB,KAAA,CAAAc,YAAY,E,mBAShDzB,mBAAA,CAKE;IAJAgC,IAAI,EAAC,MAAM;IAzBnB,uBAAAT,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA0BiBb,KAAA,CAAAsB,YAAY,GAAAT,MAAA;IACrBzB,KAAK,EAAC,YAAY;IAClBmC,WAAW,EAAC;iDAFHvB,KAAA,CAAAsB,YAAY,E,GAIvBjC,mBAAA,CAES;IAFAmC,OAAK,EAAAZ,MAAA,QAAAA,MAAA,UAAAa,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;IAAErC,KAAK,EAAC;KAAe,oBAEpD,GACAC,mBAAA,CAKS;IAJNmC,OAAK,EAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEe,IAAA,CAAAC,OAAO,CAACC,IAAI;MAAAnB,IAAA;IAAA;IACpBvB,KAAK,EAAC;KACP,mBAED,GACAC,mBAAA,CAES;IAFAmC,OAAK,EAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEe,IAAA,CAAAC,OAAO,CAACC,IAAI;MAAAnB,IAAA;IAAA;IAAyBvB,KAAK,EAAC;KAAe,iBAE1E,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}