{"ast":null,"code":"import orderStatistic from \"@/services/data_import\";\nexport default {\n  name: \"CreateShift\",\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      listProf: null,\n      selectedProf: null,\n      selectedTime: 0,\n      selectedDateStart: \"\",\n      selectedDateEnd: \"\",\n      selectedSchedule: \"\"\n    };\n  },\n  methods: {\n    getProfessions() {\n      orderStatistic.getProfession().then(response => {\n        this.listProf = response.data;\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    formShift() {\n      // Calculate the difference between selectedDateEnd and selectedDateStart\n      const startDate = new Date(this.selectedDateStart);\n      const endDate = new Date(this.selectedDateEnd);\n      const differenceInMs = endDate.getTime() - startDate.getTime();\n      const daysDifference = Math.round(differenceInMs / (24 * 60 * 60 * 1000));\n      console.log(\"COUNT TIME:\", daysDifference);\n      // Call the createShifts function with selected values\n\n      const count_d = orderStatistic.getCountDays(this.selectedProf);\n      //const count_dayss = JSON.parse(count_d);\n      //const count_days_win = count_dayss.count_d;\n      console.log(\"COUNT DAYS:\", count_d);\n      // orderStatistic\n      //   .createShifts(\n      //     this.selectedProf,\n      //     count_day,\n      //     this.selectedDateStart,\n      //     daysDifference\n      //   )\n      //   .then((response) => {\n      //     console.log(\"Shifts created successfully:\", response);\n      //   })\n      //   .catch((error) => {\n      //     console.error(\"Error creating shifts:\", error);\n      //   });\n    }\n  },\n  mounted() {\n    this.getProfessions();\n  }\n};","map":{"version":3,"names":["orderStatistic","name","props","msg","String","data","listProf","selectedProf","selectedTime","selectedDateStart","selectedDateEnd","selectedSchedule","methods","getProfessions","getProfession","then","response","console","log","catch","e","formShift","startDate","Date","endDate","differenceInMs","getTime","daysDifference","Math","round","count_d","getCountDays","mounted"],"sources":["V:\\web\\shiftfront\\src\\components\\CreateShift.vue"],"sourcesContent":["<!--CreateShift.vue-->\r\n<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">Создание смены</h1>\r\n    <div class=\"form-section\">\r\n      <p class=\"label\">Выберите профессию</p>\r\n      <select\r\n        name=\"combo_profession\"\r\n        v-model=\"selectedProf\"\r\n        class=\"select-input\"\r\n      >\r\n        <option value=\"\" disabled selected>Выберите профессию</option>\r\n        <option\r\n          v-for=\"profes in listProf\"\r\n          :key=\"profes.profession_id\"\r\n          :value=\"profes.profession_id\"\r\n        >\r\n          {{ profes.profession_name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-section\">\r\n      <p class=\"label\">Количество рабочих часов за смену</p>\r\n      <input\r\n        type=\"number\"\r\n        v-model=\"selectedTime\"\r\n        class=\"input-field\"\r\n        placeholder=\"Select Date\"\r\n      />\r\n    </div>\r\n    <div class=\"form-section\">\r\n      <p class=\"label\">Рабочий период с:</p>\r\n      <input\r\n        type=\"date\"\r\n        v-model=\"selectedDateStart\"\r\n        class=\"input-field\"\r\n        placeholder=\"Select date start\"\r\n      />\r\n      <p class=\"label\">По:</p>\r\n      <input\r\n        type=\"date\"\r\n        v-model=\"selectedDateEnd\"\r\n        class=\"input-field\"\r\n        placeholder=\"Select Date end\"\r\n      />\r\n    </div>\r\n    <div class=\"form-section\">\r\n      <p class=\"label\">Рабочий график (введите через \"/\")</p>\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"selectedSchedule\"\r\n        class=\"input-field\"\r\n        placeholder=\"Enter schedule\"\r\n      />\r\n    </div>\r\n    <button @click=\"formShift\" class=\"green-button\">Сформировать смены</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport orderStatistic from \"@/services/data_import\";\r\nexport default {\r\n  name: \"CreateShift\",\r\n  props: {\r\n    msg: String,\r\n  },\r\n  data() {\r\n    return {\r\n      listProf: null,\r\n      selectedProf: null,\r\n      selectedTime: 0,\r\n      selectedDateStart: \"\",\r\n      selectedDateEnd: \"\",\r\n      selectedSchedule: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    getProfessions() {\r\n      orderStatistic\r\n        .getProfession()\r\n        .then((response) => {\r\n          this.listProf = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    formShift() {\r\n      // Calculate the difference between selectedDateEnd and selectedDateStart\r\n      const startDate = new Date(this.selectedDateStart);\r\n      const endDate = new Date(this.selectedDateEnd);\r\n      const differenceInMs = endDate.getTime() - startDate.getTime();\r\n      const daysDifference = Math.round(differenceInMs / (24 * 60 * 60 * 1000));\r\n      console.log(\"COUNT TIME:\", daysDifference);\r\n      // Call the createShifts function with selected values\r\n\r\n      const count_d = orderStatistic.getCountDays(this.selectedProf);\r\n      //const count_dayss = JSON.parse(count_d);\r\n      //const count_days_win = count_dayss.count_d;\r\n      console.log(\"COUNT DAYS:\", count_d);\r\n      // orderStatistic\r\n      //   .createShifts(\r\n      //     this.selectedProf,\r\n      //     count_day,\r\n      //     this.selectedDateStart,\r\n      //     daysDifference\r\n      //   )\r\n      //   .then((response) => {\r\n      //     console.log(\"Shifts created successfully:\", response);\r\n      //   })\r\n      //   .catch((error) => {\r\n      //     console.error(\"Error creating shifts:\", error);\r\n      //   });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getProfessions();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 600px;\r\n  margin: 40px auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.label {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.select-input,\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.green-button {\r\n  background-color: #34c759;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.green-button:hover {\r\n  background-color: #2ecc71;\r\n}\r\n</style>\r\n"],"mappings":"AA4DA,OAAOA,cAAa,MAAO,wBAAwB;AACnD,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,CAAC;MACfC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE,EAAE;MACnBC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACfb,cAAa,CACVc,aAAa,CAAC,EACdC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACV,QAAO,GAAIU,QAAQ,CAACX,IAAI;QAC7BY,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACX,IAAI,CAAC;MAC5B,CAAC,EACAc,KAAK,CAAEC,CAAC,IAAK;QACZH,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC;MAChB,CAAC,CAAC;IACN,CAAC;IACDC,SAASA,CAAA,EAAG;MACV;MACA,MAAMC,SAAQ,GAAI,IAAIC,IAAI,CAAC,IAAI,CAACd,iBAAiB,CAAC;MAClD,MAAMe,OAAM,GAAI,IAAID,IAAI,CAAC,IAAI,CAACb,eAAe,CAAC;MAC9C,MAAMe,cAAa,GAAID,OAAO,CAACE,OAAO,CAAC,IAAIJ,SAAS,CAACI,OAAO,CAAC,CAAC;MAC9D,MAAMC,cAAa,GAAIC,IAAI,CAACC,KAAK,CAACJ,cAAa,IAAK,EAAC,GAAI,EAAC,GAAI,EAAC,GAAI,IAAI,CAAC,CAAC;MACzER,OAAO,CAACC,GAAG,CAAC,aAAa,EAAES,cAAc,CAAC;MAC1C;;MAEA,MAAMG,OAAM,GAAI9B,cAAc,CAAC+B,YAAY,CAAC,IAAI,CAACxB,YAAY,CAAC;MAC9D;MACA;MACAU,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEY,OAAO,CAAC;MACnC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACnB,cAAc,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}