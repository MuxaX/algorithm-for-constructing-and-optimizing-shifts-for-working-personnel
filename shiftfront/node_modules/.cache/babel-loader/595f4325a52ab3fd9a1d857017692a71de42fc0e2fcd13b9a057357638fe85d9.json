{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5fab1834\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Создание смены\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-section\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label\"\n}, \"Выберите профессию\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\",\n  disabled: \"\",\n  selected: \"\"\n}, \"Выберите профессию\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  class: \"form-section\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label\"\n}, \"Количество рабочих часов за смену\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"form-section\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label\"\n}, \"Рабочий период с:\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label\"\n}, \"По:\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"form-section\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label\"\n}, \"Рабочий график (введите через \\\"/\\\")\", -1 /* HOISTED */));\nconst _hoisted_14 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"select\", {\n    name: \"combo_profession\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedProf = $event),\n    class: \"select-input\"\n  }, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listProf, profes => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: profes.profession_id,\n      value: profes.profession_id\n    }, _toDisplayString(profes.profession_name), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedProf]])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedTime = $event),\n    class: \"input-field\",\n    placeholder: \"Select Date\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedTime]])]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedDateStart = $event),\n    class: \"input-field\",\n    placeholder: \"Select date start\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedDateStart]]), _hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.selectedDateEnd = $event),\n    class: \"input-field\",\n    placeholder: \"Select Date end\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedDateEnd]])]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.selectedSchedule = $event),\n    class: \"input-field\",\n    placeholder: \"Enter schedule\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedSchedule]])]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.formShift && $options.formShift(...args)),\n    class: \"green-button\"\n  }, \"Сформировать смены\"), $data.countday ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createElementVNode(\"p\", null, _toDisplayString($data.countday.count_day), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","value","disabled","selected","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","name","_cache","$event","$data","selectedProf","_hoisted_5","_Fragment","_renderList","listProf","profes","profession_id","profession_name","_hoisted_6","_hoisted_7","_hoisted_8","type","selectedTime","placeholder","_hoisted_9","_hoisted_10","selectedDateStart","_hoisted_11","selectedDateEnd","_hoisted_12","_hoisted_13","selectedSchedule","onClick","args","$options","formShift","countday","_hoisted_14","_toDisplayString","count_day","_createCommentVNode"],"sources":["V:\\web\\shiftfront\\src\\components\\CreateShift.vue"],"sourcesContent":["<!--CreateShift.vue-->\r\n<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">Создание смены</h1>\r\n    <div class=\"form-section\">\r\n      <p class=\"label\">Выберите профессию</p>\r\n      <select\r\n        name=\"combo_profession\"\r\n        v-model=\"selectedProf\"\r\n        class=\"select-input\"\r\n      >\r\n        <option value=\"\" disabled selected>Выберите профессию</option>\r\n        <option\r\n          v-for=\"profes in listProf\"\r\n          :key=\"profes.profession_id\"\r\n          :value=\"profes.profession_id\"\r\n        >\r\n          {{ profes.profession_name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"form-section\">\r\n      <p class=\"label\">Количество рабочих часов за смену</p>\r\n      <input\r\n        type=\"number\"\r\n        v-model=\"selectedTime\"\r\n        class=\"input-field\"\r\n        placeholder=\"Select Date\"\r\n      />\r\n    </div>\r\n    <div class=\"form-section\">\r\n      <p class=\"label\">Рабочий период с:</p>\r\n      <input\r\n        type=\"date\"\r\n        v-model=\"selectedDateStart\"\r\n        class=\"input-field\"\r\n        placeholder=\"Select date start\"\r\n      />\r\n      <p class=\"label\">По:</p>\r\n      <input\r\n        type=\"date\"\r\n        v-model=\"selectedDateEnd\"\r\n        class=\"input-field\"\r\n        placeholder=\"Select Date end\"\r\n      />\r\n    </div>\r\n    <div class=\"form-section\">\r\n      <p class=\"label\">Рабочий график (введите через \"/\")</p>\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"selectedSchedule\"\r\n        class=\"input-field\"\r\n        placeholder=\"Enter schedule\"\r\n      />\r\n    </div>\r\n    <button @click=\"formShift\" class=\"green-button\">Сформировать смены</button>\r\n    <div v-if=\"countday\">\r\n      <p>{{ countday.count_day }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport orderStatistic from \"@/services/data_import\";\r\nexport default {\r\n  name: \"CreateShift\",\r\n  props: {\r\n    msg: String,\r\n  },\r\n  data() {\r\n    return {\r\n      listProf: null,\r\n      selectedProf: null,\r\n      selectedTime: 0,\r\n      selectedDateStart: \"\",\r\n      selectedDateEnd: \"\",\r\n      selectedSchedule: \"\",\r\n      countday: null,\r\n    };\r\n  },\r\n  watch: {\r\n    countday(newValue) {\r\n      if (newValue) {\r\n        console.log(\"COUNT DAYS:\", newValue.count_day);\r\n        // Optionally call formShift here if you want to proceed immediately after data is fetched\r\n        this.formShift();\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    getProfessions() {\r\n      orderStatistic\r\n        .getProfession()\r\n        .then((response) => {\r\n          this.listProf = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    //async parsesDays() {\r\n    // let result = await orderStatistic.getCountDays(this.selectedProf);\r\n    //this.item = result.data.map((item) => {\r\n    //return {\r\n    //count_day: item.count_day,\r\n    // };\r\n    // });\r\n    //let days = result.count_day;\r\n\r\n    //return days;\r\n\r\n    //let result = await orderStatistic.getCountDays(this.selectedProf);\r\n    //let data = result.data;\r\n    //let days = data.count_days;\r\n    //return days;\r\n    //},\r\n\r\n    parsesDays() {\r\n      orderStatistic\r\n        .getCountDays(this.selectedProf)\r\n        .then((response) => {\r\n          this.countday = response.data;\r\n          console.log(\"Formula created successfully:\", response);\r\n          this.errors = null;\r\n        })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            this.errors = error.response.data.errors;\r\n            console.error(\"Validation Error:\", error.response.data.errors);\r\n          } else {\r\n            console.error(\"Error:\", error);\r\n          }\r\n        });\r\n    },\r\n    formShift() {\r\n      if (!this.countday) {\r\n        this.parsesDays();\r\n        return;\r\n      }\r\n      // Calculate the difference between selectedDateEnd and selectedDateStart\r\n      const startDate = new Date(this.selectedDateStart);\r\n      const endDate = new Date(this.selectedDateEnd);\r\n      const differenceInMs = endDate.getTime() - startDate.getTime();\r\n      const daysDifference = Math.round(differenceInMs / (24 * 60 * 60 * 1000));\r\n      console.log(\"COUNT TIME:\", daysDifference);\r\n      console.log(\"COUNT DAYS:\", this.countday.count_day);\r\n      console.log(\"prof:\", this.selectedProf);\r\n      console.log(\"dateStart:\", this.selectedDateStart);\r\n      orderStatistic\r\n        .createShifts(\r\n          this.selectedProf,\r\n          this.countday.count_day,\r\n          this.selectedDateStart,\r\n          daysDifference\r\n        )\r\n        .then((response) => {\r\n          console.log(\"Shifts created successfully:\", response);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error creating shifts:\", error);\r\n        });\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.getProfessions();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 600px;\r\n  margin: 40px auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.label {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.select-input,\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.green-button {\r\n  background-color: #34c759;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.green-button:hover {\r\n  background-color: #2ecc71;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}