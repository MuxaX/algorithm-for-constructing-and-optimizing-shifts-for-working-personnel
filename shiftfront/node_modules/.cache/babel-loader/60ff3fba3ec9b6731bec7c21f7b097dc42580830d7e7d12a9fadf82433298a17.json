{"ast":null,"code":"import orderStatistic from \"@/services/data_import.js\";\nimport ApexCharts from \"apexcharts\";\nexport default {\n  name: \"TheOrderStatistic\",\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      order_count_list: [],\n      chart: null,\n      selectedDate: \"\" // Initial date value\n    };\n  },\n  methods: {\n    orderStatlist() {\n      if (!this.selectedDate) {\n        console.error(\"Please select a date\");\n        return;\n      }\n      orderStatistic.getOrderStat(this.selectedDate).then(response => {\n        if (response.data && response.data.length > 0) {\n          this.order_count_list = response.data;\n          this.renderChart();\n          console.log(response.data);\n        } else {\n          console.log(\"No data received for the selected date.\");\n        }\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    renderChart() {\n      if (this.chart) {\n        this.chart.destroy();\n      }\n      if (this.order_count_list.length === 0) {\n        console.log(\"No data to render chart.\");\n        return;\n      }\n      const options = {\n        chart: {\n          type: \"bar\",\n          id: \"vuechart-example\"\n        },\n        series: [{\n          name: \"sales\",\n          data: this.order_count_list.map(item => item.order_count)\n        }],\n        xaxis: {\n          categories: this.order_count_list.map(item => item.order_hour)\n        }\n      };\n      this.chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n      this.chart.render();\n    }\n  },\n  mounted() {\n    // Optionally set a default date and fetch data\n    // this.selectedDate = '2024-07-29';\n    // this.orderStatlist();\n  }\n};","map":{"version":3,"names":["orderStatistic","ApexCharts","name","props","msg","String","data","order_count_list","chart","selectedDate","methods","orderStatlist","console","error","getOrderStat","then","response","length","renderChart","log","catch","e","destroy","options","type","id","series","map","item","order_count","xaxis","categories","order_hour","document","querySelector","render","mounted"],"sources":["V:\\web\\shiftfront\\src\\components\\OrderStatistic.vue"],"sourcesContent":["<!--OrderStatistic-->\r\n<template>\r\n  <div class=\"Main\">\r\n    <div class=\"AllUsers\">\r\n      Все заказы\r\n      <div v-for=\"(order_unit, index) in order_count_list\" :key=\"index\"></div>\r\n    </div>\r\n    <div id=\"chart\" :style=\"{ height: '300px', width: '50%' }\"></div>\r\n    <div>\r\n      <input type=\"date\" v-model=\"selectedDate\" placeholder=\"Select Date\" />\r\n      <button @click=\"orderStatlist\">Fetch Order Stat</button>\r\n      <button\r\n        @click=\"\r\n          $router.push({\r\n            name: 'viewformuls',\r\n          })\r\n        \"\r\n      >\r\n        Просмотр формул\r\n      </button>\r\n      <button\r\n        @click=\"\r\n          $router.push({\r\n            name: 'shiftlist',\r\n          })\r\n        \"\r\n      >\r\n        Просмотр смен\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport orderStatistic from \"@/services/data_import.js\";\r\nimport ApexCharts from \"apexcharts\";\r\n\r\nexport default {\r\n  name: \"TheOrderStatistic\",\r\n  props: {\r\n    msg: String,\r\n  },\r\n  data() {\r\n    return {\r\n      order_count_list: [],\r\n      chart: null,\r\n      selectedDate: \"\", // Initial date value\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    orderStatlist() {\r\n      if (!this.selectedDate) {\r\n        console.error(\"Please select a date\");\r\n        return;\r\n      }\r\n\r\n      orderStatistic\r\n        .getOrderStat(this.selectedDate)\r\n        .then((response) => {\r\n          if (response.data && response.data.length > 0) {\r\n            this.order_count_list = response.data;\r\n            this.renderChart();\r\n            console.log(response.data);\r\n          } else {\r\n            console.log(\"No data received for the selected date.\");\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n\r\n    renderChart() {\r\n      if (this.chart) {\r\n        this.chart.destroy();\r\n      }\r\n\r\n      if (this.order_count_list.length === 0) {\r\n        console.log(\"No data to render chart.\");\r\n        return;\r\n      }\r\n\r\n      const options = {\r\n        chart: {\r\n          type: \"bar\",\r\n          id: \"vuechart-example\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"sales\",\r\n            data: this.order_count_list.map((item) => item.order_count),\r\n          },\r\n        ],\r\n        xaxis: {\r\n          categories: this.order_count_list.map((item) => item.order_hour),\r\n        },\r\n      };\r\n\r\n      this.chart = new ApexCharts(document.querySelector(\"#chart\"), options);\r\n      this.chart.render();\r\n    },\r\n  },\r\n  mounted() {\r\n    // Optionally set a default date and fetch data\r\n    // this.selectedDate = '2024-07-29';\r\n    // this.orderStatlist();\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped></style>\r\n"],"mappings":"AAkCA,OAAOA,cAAa,MAAO,2BAA2B;AACtD,OAAOC,UAAS,MAAO,YAAY;AAEnC,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EAAE;MACpBC,KAAK,EAAE,IAAI;MACXC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd,IAAI,CAAC,IAAI,CAACF,YAAY,EAAE;QACtBG,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;QACrC;MACF;MAEAb,cAAa,CACVc,YAAY,CAAC,IAAI,CAACL,YAAY,EAC9BM,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACV,IAAG,IAAKU,QAAQ,CAACV,IAAI,CAACW,MAAK,GAAI,CAAC,EAAE;UAC7C,IAAI,CAACV,gBAAe,GAAIS,QAAQ,CAACV,IAAI;UACrC,IAAI,CAACY,WAAW,CAAC,CAAC;UAClBN,OAAO,CAACO,GAAG,CAACH,QAAQ,CAACV,IAAI,CAAC;QAC5B,OAAO;UACLM,OAAO,CAACO,GAAG,CAAC,yCAAyC,CAAC;QACxD;MACF,CAAC,EACAC,KAAK,CAAEC,CAAC,IAAK;QACZT,OAAO,CAACO,GAAG,CAACE,CAAC,CAAC;MAChB,CAAC,CAAC;IACN,CAAC;IAEDH,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACV,KAAK,EAAE;QACd,IAAI,CAACA,KAAK,CAACc,OAAO,CAAC,CAAC;MACtB;MAEA,IAAI,IAAI,CAACf,gBAAgB,CAACU,MAAK,KAAM,CAAC,EAAE;QACtCL,OAAO,CAACO,GAAG,CAAC,0BAA0B,CAAC;QACvC;MACF;MAEA,MAAMI,OAAM,GAAI;QACdf,KAAK,EAAE;UACLgB,IAAI,EAAE,KAAK;UACXC,EAAE,EAAE;QACN,CAAC;QACDC,MAAM,EAAE,CACN;UACExB,IAAI,EAAE,OAAO;UACbI,IAAI,EAAE,IAAI,CAACC,gBAAgB,CAACoB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,WAAW;QAC5D,CAAC,CACF;QACDC,KAAK,EAAE;UACLC,UAAU,EAAE,IAAI,CAACxB,gBAAgB,CAACoB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,UAAU;QACjE;MACF,CAAC;MAED,IAAI,CAACxB,KAAI,GAAI,IAAIP,UAAU,CAACgC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,EAAEX,OAAO,CAAC;MACtE,IAAI,CAACf,KAAK,CAAC2B,MAAM,CAAC,CAAC;IACrB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA;IACA;EAAA;AAEJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}