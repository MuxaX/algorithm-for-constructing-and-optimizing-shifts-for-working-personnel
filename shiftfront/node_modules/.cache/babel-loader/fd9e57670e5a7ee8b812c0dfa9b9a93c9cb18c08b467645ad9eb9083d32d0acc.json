{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Составить формулу\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Выберите профессию\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\",\n  disabled: \"\",\n  selected: \"\"\n}, \"Выберите профессию\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Выберите тип зказа для профессии\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\",\n  disabled: \"\",\n  selected: \"\"\n}, \" X = количество заказов с данным типом \", -1 /* HOISTED */);\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Введите формулу\", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"select\", {\n    name: \"combo_profession\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedProf = $event)\n  }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listProf, profes => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: profes.profession_id,\n      value: profes.profession_id\n    }, _toDisplayString(profes.profession_name), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedProf]]), $data.errors && $data.errors.profession_id ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($data.errors.profession_id), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _hoisted_6, _withDirectives(_createElementVNode(\"select\", {\n    name: \"combo_order\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedType = $event),\n    placeholder: \"X = количество заказов с данным типом\"\n  }, [_hoisted_7, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listTypeOrder, order_type => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: order_type.order_type_id,\n      value: order_type.order_type_id\n    }, _toDisplayString(order_type.order_type_name), 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedType]])]), _createElementVNode(\"div\", null, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.formulValue = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formulValue]]), $data.errors && $data.errors.formula ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, _toDisplayString($data.errors.formula), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"p\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.insertFormul && $options.insertFormul(...args))\n  }, \"Создать формулу\")]), $data.errors ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.errors, (error, key) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: key\n    }, _toDisplayString(error), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","value","disabled","selected","key","_createElementBlock","_hoisted_1","_hoisted_2","name","_cache","$event","$data","selectedProf","_hoisted_3","_Fragment","_renderList","listProf","profes","profession_id","profession_name","_hoisted_4","errors","_hoisted_5","_toDisplayString","_createCommentVNode","_hoisted_6","selectedType","placeholder","_hoisted_7","listTypeOrder","order_type","order_type_id","order_type_name","_hoisted_8","_hoisted_9","type","formulValue","formula","_hoisted_10","onClick","args","$options","insertFormul","_hoisted_11","error"],"sources":["V:\\web\\shiftfront\\src\\components\\Formuls.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Составить формулу</h1>\r\n    <div>\r\n      <p>Выберите профессию</p>\r\n      <select name=\"combo_profession\" v-model=\"selectedProf\">\r\n        <option value=\"\" disabled selected>Выберите профессию</option>\r\n        <option\r\n          v-for=\"profes in listProf\"\r\n          :key=\"profes.profession_id\"\r\n          :value=\"profes.profession_id\"\r\n        >\r\n          {{ profes.profession_name }}\r\n        </option>\r\n      </select>\r\n      <p v-if=\"errors && errors.profession_id\">{{ errors.profession_id }}</p>\r\n      <p>Выберите тип зказа для профессии</p>\r\n      <select\r\n        name=\"combo_order\"\r\n        v-model=\"selectedType\"\r\n        placeholder=\"X = количество заказов с данным типом\"\r\n      >\r\n        <option value=\"\" disabled selected>\r\n          X = количество заказов с данным типом\r\n        </option>\r\n        <option\r\n          v-for=\"order_type in listTypeOrder\"\r\n          :key=\"order_type.order_type_id\"\r\n          :value=\"order_type.order_type_id\"\r\n        >\r\n          {{ order_type.order_type_name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div>\r\n      <p>Введите формулу</p>\r\n      <input type=\"text\" v-model=\"formulValue\" />\r\n      <p v-if=\"errors && errors.formula\">{{ errors.formula }}</p>\r\n    </div>\r\n    <p><button @click=\"insertFormul\">Создать формулу</button></p>\r\n    <div v-if=\"errors\">\r\n      <ul>\r\n        <li v-for=\"(error, key) in errors\" :key=\"key\">{{ error }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport orderStatistic from \"@/services/data_import\";\r\nexport default {\r\n  name: \"TheFormuls\",\r\n  data() {\r\n    return {\r\n      listTypeOrder: null,\r\n      listProf: null,\r\n      selectedProf: null,\r\n      selectedType: null,\r\n      formulValue: \"\",\r\n      errors: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getOrderTypes();\r\n    this.getProfessions();\r\n  },\r\n  methods: {\r\n    getOrderTypes() {\r\n      orderStatistic\r\n        .getOrderType()\r\n        .then((response) => {\r\n          this.listTypeOrder = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    getProfessions() {\r\n      orderStatistic\r\n        .getProfession()\r\n        .then((response) => {\r\n          this.listProf = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    insertFormul() {\r\n      if (!this.selectedProf || !this.formulValue) {\r\n        this.errors = {\r\n          profession_id: [\"Please select a profession.\"],\r\n          formula: [\"Please enter a formula.\"],\r\n        };\r\n        return;\r\n      }\r\n      orderStatistic\r\n        .getIdProfession(this.selectedProf)\r\n        .then((response) => {\r\n          let id_prof = response.data;\r\n          orderStatistic\r\n            .insertFormule(id_prof, this.formulValue)\r\n            .then((response) => {\r\n              console.log(\"Formula created successfully:\", response);\r\n              this.errors = null;\r\n            })\r\n            .catch((error) => {\r\n              if (error.response) {\r\n                this.errors = error.response.data.errors;\r\n                console.error(\"Validation Error:\", error.response.data.errors);\r\n              } else {\r\n                console.error(\"Error:\", error);\r\n              }\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error getting profession ID:\", error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}