{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-022f0778\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Составить формулу\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-section\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label\"\n}, \"Выберите профессию\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\",\n  disabled: \"\",\n  selected: \"\"\n}, \"Выберите профессию\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label\"\n}, \"Выберите тип зказа для профессии\", -1 /* HOISTED */));\nconst _hoisted_8 = [\"value\"];\nconst _hoisted_9 = {\n  key: 0,\n  class: \"result-section\"\n};\nconst _hoisted_10 = {\n  class: \"form-section\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label\"\n}, \" X = количество заказов с данным типом, Y = количество минут, затраченное на заказ \", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label\"\n}, \"Введите формулу\", -1 /* HOISTED */));\nconst _hoisted_13 = {\n  key: 1,\n  class: \"error-section\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"select\", {\n    name: \"combo_profession\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedProf = $event),\n    class: \"select-input\"\n  }, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listProf, profes => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: profes.profession_id,\n      value: profes.profession_id\n    }, _toDisplayString(profes.profession_name), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedProf]]), _hoisted_7, _withDirectives(_createElementVNode(\"select\", {\n    name: \"combo_order\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedType = $event),\n    class: \"select-input\"\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.listTypeOrder, order_type => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: order_type.order_type_id,\n      value: order_type.order_type_id\n    }, _toDisplayString(order_type.order_type_name), 9 /* TEXT, PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedType]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.CountDay = $event),\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.CountDay]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.learnAverrageTime && $options.learnAverrageTime(...args)),\n    class: \"green-button\"\n  }, \" Среднее время на заказ \")]), $data.averageTime ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"p\", null, \"Среднее время на заказ: \" + _toDisplayString($data.averageTime.average_time), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Количество заказов: \" + _toDisplayString($data.averageTime.order_count), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _hoisted_12, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.formulValue = $event),\n    class: \"input-field\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.formulValue]])]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.insertFormul && $options.insertFormul(...args)),\n    class: \"green-button\"\n  }, \"Создать формулу\"), $data.errors ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.errors, (error, key) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: key\n    }, _toDisplayString(error), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","value","disabled","selected","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","name","_cache","$event","$data","selectedProf","_hoisted_5","_Fragment","_renderList","listProf","profes","profession_id","profession_name","_hoisted_6","_hoisted_7","selectedType","listTypeOrder","order_type","order_type_id","order_type_name","_hoisted_8","type","CountDay","onClick","args","$options","learnAverrageTime","averageTime","_hoisted_9","_toDisplayString","average_time","order_count","_createCommentVNode","_hoisted_10","_hoisted_11","_hoisted_12","formulValue","insertFormul","errors","_hoisted_13","error"],"sources":["V:\\web\\shiftfront\\src\\components\\Formuls.vue"],"sourcesContent":["<!--Formuls-->\r\n<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">Составить формулу</h1>\r\n    <div class=\"form-section\">\r\n      <p class=\"label\">Выберите профессию</p>\r\n      <select\r\n        name=\"combo_profession\"\r\n        v-model=\"selectedProf\"\r\n        class=\"select-input\"\r\n      >\r\n        <option value=\"\" disabled selected>Выберите профессию</option>\r\n        <option\r\n          v-for=\"profes in listProf\"\r\n          :key=\"profes.profession_id\"\r\n          :value=\"profes.profession_id\"\r\n        >\r\n          {{ profes.profession_name }}\r\n        </option>\r\n      </select>\r\n      <p class=\"label\">Выберите тип зказа для профессии</p>\r\n      <select name=\"combo_order\" v-model=\"selectedType\" class=\"select-input\">\r\n        <option\r\n          v-for=\"order_type in listTypeOrder\"\r\n          :key=\"order_type.order_type_id\"\r\n          :value=\"order_type.order_type_id\"\r\n        >\r\n          {{ order_type.order_type_name }}\r\n        </option>\r\n      </select>\r\n      <input type=\"number\" v-model=\"CountDay\" class=\"input-field\" />\r\n      <button @click=\"learnAverrageTime\" class=\"green-button\">\r\n        Среднее время на заказ\r\n      </button>\r\n    </div>\r\n    <div v-if=\"averageTime\" class=\"result-section\">\r\n      <p>Среднее время на заказ: {{ averageTime.average_time }}</p>\r\n      <p>Количество заказов: {{ averageTime.order_count }}</p>\r\n    </div>\r\n    <div class=\"form-section\">\r\n      <p class=\"label\">\r\n        X = количество заказов с данным типом, Y = количество минут, затраченное\r\n        на заказ\r\n      </p>\r\n      <p class=\"label\">Введите формулу</p>\r\n      <input type=\"text\" v-model=\"formulValue\" class=\"input-field\" />\r\n    </div>\r\n    <button @click=\"insertFormul\" class=\"green-button\">Создать формулу</button>\r\n    <div v-if=\"errors\" class=\"error-section\">\r\n      <ul>\r\n        <li v-for=\"(error, key) in errors\" :key=\"key\">{{ error }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport orderStatistic from \"@/services/data_import\";\r\nexport default {\r\n  name: \"TheFormuls\",\r\n  data() {\r\n    return {\r\n      listTypeOrder: null,\r\n      listProf: null,\r\n      selectedProf: null,\r\n      selectedType: null,\r\n      formulValue: \"\",\r\n      errors: null,\r\n      averageTime: null,\r\n      CountDay: 0,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getOrderTypes();\r\n    this.getProfessions();\r\n  },\r\n  methods: {\r\n    getOrderTypes() {\r\n      orderStatistic\r\n        .getOrderType()\r\n        .then((response) => {\r\n          this.listTypeOrder = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    getProfessions() {\r\n      orderStatistic\r\n        .getProfession()\r\n        .then((response) => {\r\n          this.listProf = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    insertFormul() {\r\n      if (!this.selectedProf || !this.formulValue) {\r\n        alert(\"Please select a profession and enter a formula.\");\r\n        return;\r\n      }\r\n      orderStatistic\r\n        .getIdProfession(this.selectedProf)\r\n        .then((response) => {\r\n          let id_prof = response.data;\r\n          id_prof + 1;\r\n          orderStatistic\r\n            .insertFormule(this.selectedProf, this.formulValue)\r\n            .then((response) => {\r\n              console.log(\"Formula created successfully:\", response);\r\n              this.errors = null;\r\n            })\r\n            .catch((error) => {\r\n              if (error.response) {\r\n                this.errors = error.response.data.errors;\r\n                console.error(\"Validation Error:\", error.response.data.errors);\r\n              } else {\r\n                console.error(\"Error:\", error);\r\n              }\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error getting profession ID:\", error);\r\n        });\r\n    },\r\n    learnAverrageTime() {\r\n      orderStatistic\r\n        .getAverTime(this.selectedType, this.CountDay)\r\n        .then((response) => {\r\n          this.averageTime = response.data;\r\n          console.log(\"Formula created successfully:\", response);\r\n          this.errors = null;\r\n        })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            this.errors = error.response.data.errors;\r\n            console.error(\"Validation Error:\", error.response.data.errors);\r\n          } else {\r\n            console.error(\"Error:\", error);\r\n          }\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 600px;\r\n  margin: 40px auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.label {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.select-input,\r\n.input-field {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.green-button {\r\n  background-color: #34c759;\r\n  color: #fff;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.green-button:hover {\r\n  background-color: #2ecc71;\r\n}\r\n\r\n.result-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.error-section {\r\n  color: red;\r\n}\r\n</style>\r\n"],"mappings":";;;EAEOA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAAwC;EAApCD,KAAK,EAAC;AAAO,GAAC,mBAAiB;;EAC9BA,KAAK,EAAC;AAAc;gEACvBC,mBAAA,CAAuC;EAApCD,KAAK,EAAC;AAAO,GAAC,oBAAkB;gEAMjCC,mBAAA,CAA8D;EAAtDC,KAAK,EAAC,EAAE;EAACC,QAAQ,EAAR,EAAQ;EAACC,QAAQ,EAAR;GAAS,oBAAkB;mBAX7D;gEAoBMH,mBAAA,CAAqD;EAAlDD,KAAK,EAAC;AAAO,GAAC,kCAAgC;mBApBvD;;EAAAK,GAAA;EAmC4BL,KAAK,EAAC;;;EAIzBA,KAAK,EAAC;AAAc;iEACvBC,mBAAA,CAGI;EAHDD,KAAK,EAAC;AAAO,GAAC,qFAGjB;iEACAC,mBAAA,CAAoC;EAAjCD,KAAK,EAAC;AAAO,GAAC,iBAAe;;EA5CtCK,GAAA;EAgDuBL,KAAK,EAAC;;;uBA9C3BM,mBAAA,CAmDM,OAnDNC,UAmDM,GAlDJC,UAAwC,EACxCP,mBAAA,CA8BM,OA9BNQ,UA8BM,GA7BJC,UAAuC,E,gBACvCT,mBAAA,CAaS;IAZPU,IAAI,EAAC,kBAAkB;IAP/B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQiBC,KAAA,CAAAC,YAAY,GAAAF,MAAA;IACrBb,KAAK,EAAC;MAENgB,UAA8D,G,kBAC9DV,mBAAA,CAMSW,SAAA,QAlBjBC,WAAA,CAa2BJ,KAAA,CAAAK,QAAQ,EAAlBC,MAAM;yBADfd,mBAAA,CAMS;MAJND,GAAG,EAAEe,MAAM,CAACC,aAAa;MACzBnB,KAAK,EAAEkB,MAAM,CAACC;wBAEZD,MAAM,CAACE,eAAe,wBAjBnCC,UAAA;2EAQiBT,KAAA,CAAAC,YAAY,E,GAYvBS,UAAqD,E,gBACrDvB,mBAAA,CAQS;IARDU,IAAI,EAAC,aAAa;IArBhC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqB0CC,KAAA,CAAAW,YAAY,GAAAZ,MAAA;IAAEb,KAAK,EAAC;yBACtDM,mBAAA,CAMSW,SAAA,QA5BjBC,WAAA,CAuB+BJ,KAAA,CAAAY,aAAa,EAA3BC,UAAU;yBADnBrB,mBAAA,CAMS;MAJND,GAAG,EAAEsB,UAAU,CAACC,aAAa;MAC7B1B,KAAK,EAAEyB,UAAU,CAACC;wBAEhBD,UAAU,CAACE,eAAe,wBA3BvCC,UAAA;2EAqB0ChB,KAAA,CAAAW,YAAY,E,mBAShDxB,mBAAA,CAA8D;IAAvD8B,IAAI,EAAC,QAAQ;IA9B1B,uBAAAnB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA8BoCC,KAAA,CAAAkB,QAAQ,GAAAnB,MAAA;IAAEb,KAAK,EAAC;iDAAhBc,KAAA,CAAAkB,QAAQ,E,GACtC/B,mBAAA,CAES;IAFAgC,OAAK,EAAArB,MAAA,QAAAA,MAAA,UAAAsB,IAAA,KAAEC,QAAA,CAAAC,iBAAA,IAAAD,QAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;IAAElC,KAAK,EAAC;KAAe,0BAExD,E,GAESc,KAAA,CAAAuB,WAAW,I,cAAtB/B,mBAAA,CAGM,OAHNgC,UAGM,GAFJrC,mBAAA,CAA6D,WAA1D,0BAAwB,GAAAsC,gBAAA,CAAGzB,KAAA,CAAAuB,WAAW,CAACG,YAAY,kBACtDvC,mBAAA,CAAwD,WAArD,sBAAoB,GAAAsC,gBAAA,CAAGzB,KAAA,CAAAuB,WAAW,CAACI,WAAW,iB,KArCvDC,mBAAA,gBAuCIzC,mBAAA,CAOM,OAPN0C,WAOM,GANJC,WAGI,EACJC,WAAoC,E,gBACpC5C,mBAAA,CAA+D;IAAxD8B,IAAI,EAAC,MAAM;IA7CxB,uBAAAnB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA6CkCC,KAAA,CAAAgC,WAAW,GAAAjC,MAAA;IAAEb,KAAK,EAAC;iDAAnBc,KAAA,CAAAgC,WAAW,E,KAEzC7C,mBAAA,CAA2E;IAAlEgC,OAAK,EAAArB,MAAA,QAAAA,MAAA,UAAAsB,IAAA,KAAEC,QAAA,CAAAY,YAAA,IAAAZ,QAAA,CAAAY,YAAA,IAAAb,IAAA,CAAY;IAAElC,KAAK,EAAC;KAAe,iBAAe,GACvDc,KAAA,CAAAkC,MAAM,I,cAAjB1C,mBAAA,CAIM,OAJN2C,WAIM,GAHJhD,mBAAA,CAEK,c,kBADHK,mBAAA,CAA8DW,SAAA,QAlDtEC,WAAA,CAkDmCJ,KAAA,CAAAkC,MAAM,EAlDzC,CAkDoBE,KAAK,EAAE7C,GAAG;yBAAtBC,mBAAA,CAA8D;MAA1BD,GAAG,EAAEA;IAAG,GAAAkC,gBAAA,CAAKW,KAAK;wCAlD9DR,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}