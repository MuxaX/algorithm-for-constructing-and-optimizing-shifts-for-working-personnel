{"ast":null,"code":"import orderStatistic from \"@/services/data_import\";\nexport default {\n  name: \"TheFormuls\",\n  data() {\n    return {\n      listTypeOrder: null,\n      listProf: null,\n      selectedProf: null,\n      selectedType: null,\n      formulValue: \"\",\n      errors: null,\n      averageTime: null,\n      CountDay: 0\n    };\n  },\n  mounted() {\n    this.getOrderTypes();\n    this.getProfessions();\n  },\n  methods: {\n    getOrderTypes() {\n      orderStatistic.getOrderType().then(response => {\n        this.listTypeOrder = response.data;\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    getProfessions() {\n      orderStatistic.getProfession().then(response => {\n        this.listProf = response.data;\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    insertFormul() {\n      if (!this.selectedProf || !this.formulValue) {\n        alert(\"Please select a profession and enter a formula.\");\n        return;\n      }\n      orderStatistic.getIdProfession(this.selectedProf).then(response => {\n        let id_prof = response.data;\n        id_prof + 1;\n        orderStatistic.insertFormule(this.selectedProf, this.formulValue).then(response => {\n          console.log(\"Formula created successfully:\", response);\n          this.errors = null;\n        }).catch(error => {\n          if (error.response) {\n            this.errors = error.response.data.errors;\n            console.error(\"Validation Error:\", error.response.data.errors);\n          } else {\n            console.error(\"Error:\", error);\n          }\n        });\n      }).catch(error => {\n        console.error(\"Error getting profession ID:\", error);\n      });\n    },\n    learnAverrageTime() {\n      orderStatistic.getAverTime(this.selectedType, this.CountDay).then(response => {\n        this.averageTime = response.data;\n        console.log(\"Formula created successfully:\", response);\n        this.errors = null;\n      }).catch(error => {\n        if (error.response) {\n          this.errors = error.response.data.errors;\n          console.error(\"Validation Error:\", error.response.data.errors);\n        } else {\n          console.error(\"Error:\", error);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["orderStatistic","name","data","listTypeOrder","listProf","selectedProf","selectedType","formulValue","errors","averageTime","CountDay","mounted","getOrderTypes","getProfessions","methods","getOrderType","then","response","console","log","catch","e","getProfession","insertFormul","alert","getIdProfession","id_prof","insertFormule","error","learnAverrageTime","getAverTime"],"sources":["V:\\web\\shiftfront\\src\\components\\Formuls.vue"],"sourcesContent":["<!--Formuls-->\r\n<template>\r\n  <div>\r\n    <h1>Составить формулу</h1>\r\n    <div>\r\n      <p>Выберите профессию</p>\r\n      <select name=\"combo_profession\" v-model=\"selectedProf\">\r\n        <option value=\"\" disabled selected>Выберите профессию</option>\r\n        <option\r\n          v-for=\"profes in listProf\"\r\n          :key=\"profes.profession_id\"\r\n          :value=\"profes.profession_id\"\r\n        >\r\n          {{ profes.profession_name }}\r\n        </option>\r\n      </select>\r\n      <p>Выберите тип зказа для профессии</p>\r\n      <select\r\n        name=\"combo_order\"\r\n        v-model=\"selectedType\"\r\n        placeholder=\"X = количество заказов с данным типом\"\r\n      >\r\n        <option\r\n          v-for=\"order_type in listTypeOrder\"\r\n          :key=\"order_type.order_type_id\"\r\n          :value=\"order_type.order_type_id\"\r\n        >\r\n          {{ order_type.order_type_name }}\r\n        </option>\r\n      </select>\r\n      <input type=\"number\" v-model=\"CountDay\" />\r\n      <button @click=\"learnAverrageTime\">Среднее время на заказ</button>\r\n    </div>\r\n    <div v-if=\"averageTime\">\r\n      <p>Среднее время на заказ: {{ averageTime }}</p>\r\n      <p>Количество заказов:</p>\r\n    </div>\r\n    <div>\r\n      <p>\r\n        X = количество заказов с данным типом, Y = количество минут, затраченное\r\n        на заказ\r\n      </p>\r\n      <p>Введите формулу</p>\r\n      <input type=\"text\" v-model=\"formulValue\" />\r\n    </div>\r\n    <p><button @click=\"insertFormul\">Создать формулу</button></p>\r\n    <div v-if=\"errors\">\r\n      <ul>\r\n        <li v-for=\"(error, key) in errors\" :key=\"key\">{{ error }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport orderStatistic from \"@/services/data_import\";\r\nexport default {\r\n  name: \"TheFormuls\",\r\n  data() {\r\n    return {\r\n      listTypeOrder: null,\r\n      listProf: null,\r\n      selectedProf: null,\r\n      selectedType: null,\r\n      formulValue: \"\",\r\n      errors: null,\r\n      averageTime: null,\r\n      CountDay: 0,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getOrderTypes();\r\n    this.getProfessions();\r\n  },\r\n  methods: {\r\n    getOrderTypes() {\r\n      orderStatistic\r\n        .getOrderType()\r\n        .then((response) => {\r\n          this.listTypeOrder = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    getProfessions() {\r\n      orderStatistic\r\n        .getProfession()\r\n        .then((response) => {\r\n          this.listProf = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    insertFormul() {\r\n      if (!this.selectedProf || !this.formulValue) {\r\n        alert(\"Please select a profession and enter a formula.\");\r\n        return;\r\n      }\r\n      orderStatistic\r\n        .getIdProfession(this.selectedProf)\r\n        .then((response) => {\r\n          let id_prof = response.data;\r\n          id_prof + 1;\r\n          orderStatistic\r\n            .insertFormule(this.selectedProf, this.formulValue)\r\n            .then((response) => {\r\n              console.log(\"Formula created successfully:\", response);\r\n              this.errors = null;\r\n            })\r\n            .catch((error) => {\r\n              if (error.response) {\r\n                this.errors = error.response.data.errors;\r\n                console.error(\"Validation Error:\", error.response.data.errors);\r\n              } else {\r\n                console.error(\"Error:\", error);\r\n              }\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error getting profession ID:\", error);\r\n        });\r\n    },\r\n    learnAverrageTime() {\r\n      orderStatistic\r\n        .getAverTime(this.selectedType, this.CountDay)\r\n        .then((response) => {\r\n          this.averageTime = response.data;\r\n          console.log(\"Formula created successfully:\", response);\r\n          this.errors = null;\r\n        })\r\n        .catch((error) => {\r\n          if (error.response) {\r\n            this.errors = error.response.data.errors;\r\n            console.error(\"Validation Error:\", error.response.data.errors);\r\n          } else {\r\n            console.error(\"Error:\", error);\r\n          }\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}